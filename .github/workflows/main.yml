name: Continuous Integration

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  ci:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        name:
          - ubuntu-latest-stable
          - ubuntu-latest-nightly
          - windows-latest-stable
          - windows-latest-nightly
        include:
          - name: ubuntu-latest-stable
            os: ubuntu-latest
            rust: stable
            target: x86_64-unknown-linux-gnu
            rustflags: -D warnings
          - name: ubuntu-latest-nightly
            os: ubuntu-latest
            rust: nightly
            target: x86_64-unknown-linux-gnu
            rustflags: -D warnings
          - name: windows-latest-stable
            os: windows-latest
            rust: stable
            target: x86_64-pc-windows-msvc
            rustflags: -D warnings
          - name: windows-latest-nightly
            os: windows-latest
            rust: nightly
            target: x86_64-pc-windows-msvc
            rustflags: -D warnings

    steps:
      - uses: actions/checkout@v3

      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
          targets: ${{ matrix.target }}
          components: rustfmt, clippy

      - run: cargo build --all --all-targets --target=${{ matrix.target }}
        if: success() || failure()
        env:
          RUSTFLAGS: ${{ matrix.rustflags }}

      - run: cargo test --all --all-targets --target=${{ matrix.target }}
        if: success() || failure()
        env:
          RUSTFLAGS: ${{ matrix.rustflags }}
          
      - run: cargo fmt --all -- --check
        if: success() || failure()
      
      - run: cargo clippy --all --all-targets --target=${{ matrix.target }} -- -D warnings
        if: success() || failure()
        env:
          RUSTFLAGS: ${{ matrix.rustflags }}
